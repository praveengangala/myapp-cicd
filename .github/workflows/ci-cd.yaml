name: CI & CD

on:
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/myapp
  K8S_NAMESPACE: production
  HELM_CHART_DIR: chart
  VALUES_FILE: chart/values-prod.yaml
  MANIFESTS_DIR: manifests

jobs:
  static-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm install
      - run: npm test
      - uses: github/super-linter/slim@v6
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: true

  build-and-push:
    runs-on: ubuntu-latest
    needs: static-checks
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix=git-,format=short
            type=raw,value=latest

      - uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  helm-and-security:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - uses: actions/checkout@v4
      - uses: azure/setup-helm@v4
      - uses: mikefarah/yq@v4.44.3

      - name: Update Helm image tag
        run: |
          TAG="git-${GITHUB_SHA::7}"
          yq -i ".image.repository=\"${{ env.IMAGE_NAME }}\" | .image.tag=\"${TAG}\"" ${{ env.VALUES_FILE }}

      - run: helm lint ${{ env.HELM_CHART_DIR }}
      - run: |
          mkdir -p ${{ env.MANIFESTS_DIR }}
          helm template myapp ${{ env.HELM_CHART_DIR }} -f ${{ env.VALUES_FILE }} \
            --namespace ${{ env.K8S_NAMESPACE }} \
            --output-dir ${{ env.MANIFESTS_DIR }}

      - uses: bridgecrewio/checkov-action@v12
        with:
          directory: ${{ env.MANIFESTS_DIR }}
          soft_fail: false

  argocd-deploy:
    runs-on: ubuntu-latest
    needs: helm-and-security
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: clowdhaus/argo-cd-action@v2.5
        with:
          argocd_server: ${{ secrets.ARGOCD_SERVER }}
          argocd_token: ${{ secrets.ARGOCD_AUTH_TOKEN }}
          command: app sync
          appName: ${{ secrets.ARGOCD_APP_NAME }}
          flags: "--prune --timeout 300"
